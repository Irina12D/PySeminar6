# Использование map
# Задача №5 семинара №1
"""
    Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними
    в 2D пространстве или в 3D пространстве
"""
Acoordinates = list(map(int, input("Введите координаты точки A через пробел: ").split()))
Bcoordinates = list(map(int, input("Введите координаты точки B через пробел: ").split()))
if len(Acoordinates) != len(Bcoordinates):
    print("Точки должны быть обе одновременно на плоскости или в пространстве!")
elif not(2 <= len(Acoordinates) <= 3):
    print("Работаем только на плоскости 2D или в пространстве 3D!")
else:
    dist = 0
    for i in range(len(Acoordinates)):
        dist += (Acoordinates[i] - Bcoordinates[i])**2
    dist = dist ** 0.5
    if len(Acoordinates) == 2:
         print("Расстояние между точками на плоскости равно", dist)
    else:
        print("Расстояние между точками в пространстве равно", dist)
print()



# Использование list comprehension
# Задача №2 семинара №2
'''
    Задайте список из n чисел последовательности (1 + 1/n)^n. Вывести в консоль сам список и сумму его элементов.
'''
n = int(input('Введите количество чисел последовательности '))
sequence = [(1 + 1/i)**i for i in range(1, n+1)]
print("Элементы последовательности:")
print(* sequence)
print("Сумма всех элементов =", sum(sequence))
print()



# Использование filter и lambda-функции
# Задача №5 семинара №2
'''
    Написать программу, которая будет вводить в консоль заданный текст, затем принимать из консоли шаблон подстроки
    и удалять в заданном тексте все слова в которых присутствует введенный шаблон
    Пример:
        Введите текст: Python - один из самых популярных языков программирования в мире
        Введите подстроку: ам
        Python - один из популярных языков в мире
'''
text = input("Введите текст для обработки: ")
sub_str = input("Введите подстроку: ")

words = text.split()
result = ' '.join((filter(lambda s: sub_str not in s, words)))
print("Отфильтрованная строка:", result)
